{"ast":null,"code":"var _jsxFileName = \"/home/prajjwal/Documents/GitHub/To-DO-DA/src/DarkMode.js\",\n    _s = $RefreshSig$();\n\nimport { Switch, ThemeProvider, createMuiTheme } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DarkModeButton() {\n  _s();\n\n  const [darkState, setDarkState] = useState(false);\n  const mainPrimaryColor = darkState ? orange[500] : lightBlue[500];\n  const mainSecondaryColor = darkState ? deepOrange[900] : deepPurple[500];\n  const palletType = darkState ? \"dark\" : \"light\";\n  const darkTheme = createMuiTheme({\n    palette: {\n      type: palletType,\n      primary: {\n        main: mainPrimaryColor\n      },\n      secondary: {\n        main: mainSecondaryColor\n      }\n    }\n  });\n\n  const handleThemeChange = () => {\n    setDarkState(!darkState);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ThemeProvider, {\n      theme: darkTheme,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \" Sample Text \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        checked: darkState,\n        onChange: handleThemeChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DarkModeButton, \"o410S+fC0BWK6UFj4ee8pB2qvk4=\");\n\n_c = DarkModeButton;\n\nvar _c;\n\n$RefreshReg$(_c, \"DarkModeButton\");","map":{"version":3,"sources":["/home/prajjwal/Documents/GitHub/To-DO-DA/src/DarkMode.js"],"names":["Switch","ThemeProvider","createMuiTheme","React","useState","DarkModeButton","darkState","setDarkState","mainPrimaryColor","orange","lightBlue","mainSecondaryColor","deepOrange","deepPurple","palletType","darkTheme","palette","type","primary","main","secondary","handleThemeChange"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,aAAjB,EAAgCC,cAAhC,QAAsD,mBAAtD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;AAEA,eAAe,SAASC,cAAT,GAA0B;AAAA;;AACvC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAMI,gBAAgB,GAAGF,SAAS,GAAGG,MAAM,CAAC,GAAD,CAAT,GAAiBC,SAAS,CAAC,GAAD,CAA5D;AACA,QAAMC,kBAAkB,GAAGL,SAAS,GAAGM,UAAU,CAAC,GAAD,CAAb,GAAqBC,UAAU,CAAC,GAAD,CAAnE;AACA,QAAMC,UAAU,GAAGR,SAAS,GAAG,MAAH,GAAY,OAAxC;AACA,QAAMS,SAAS,GAAGb,cAAc,CAAC;AAC/Bc,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAEH,UADC;AAEPI,MAAAA,OAAO,EAAE;AACPC,QAAAA,IAAI,EAAEX;AADC,OAFF;AAKPY,MAAAA,SAAS,EAAE;AACTD,QAAAA,IAAI,EAAER;AADG;AALJ;AADsB,GAAD,CAAhC;;AAWA,QAAMU,iBAAiB,GAAG,MAAM;AAC9Bd,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD,GAFD;;AAIA,sBACE;AAAA,2BACE,QAAC,aAAD;AAAe,MAAA,KAAK,EAAES,SAAtB;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAET,SAAjB;AAA4B,QAAA,QAAQ,EAAEe;AAAtC;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GA5BuBhB,c;;KAAAA,c","sourcesContent":["import { Switch, ThemeProvider, createMuiTheme } from \"@material-ui/core\";\nimport React from \"react\";\nimport { useState } from \"react\";\n\nexport default function DarkModeButton() {\n  const [darkState, setDarkState] = useState(false);\n  const mainPrimaryColor = darkState ? orange[500] : lightBlue[500];\n  const mainSecondaryColor = darkState ? deepOrange[900] : deepPurple[500];\n  const palletType = darkState ? \"dark\" : \"light\";\n  const darkTheme = createMuiTheme({\n    palette: {\n      type: palletType,\n      primary: {\n        main: mainPrimaryColor,\n      },\n      secondary: {\n        main: mainSecondaryColor,\n      },\n    },\n  });\n  const handleThemeChange = () => {\n    setDarkState(!darkState);\n  };\n\n  return (\n    <div>\n      <ThemeProvider theme={darkTheme}>\n        <div> Sample Text </div>\n        <Switch checked={darkState} onChange={handleThemeChange} />\n      </ThemeProvider>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}