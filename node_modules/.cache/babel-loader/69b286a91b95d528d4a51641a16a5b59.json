{"ast":null,"code":"import _slicedToArray from\"/home/prajjwal/Documents/GitHub/todo-app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import StyledFirebaseAuth from\"react-firebaseui/StyledFirebaseAuth\";import firebase from\"firebase\";// Configure FirebaseUI.\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var uiConfig={// Popup signin flow rather than redirect flow.\nsignInFlow:\"popup\",signInOptions:[firebase.auth.GoogleAuthProvider.PROVIDER_ID,firebase.auth.EmailAuthProvider.PROVIDER_ID],callbacks:{// Avoid redirects after sign-in.\nsignInSuccessWithAuthResult:function signInSuccessWithAuthResult(){return false;}}};function SignInScreen(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isSignedIn=_useState2[0],setIsSignedIn=_useState2[1];// Local signed-in state.\n// Listen to the Firebase Auth state and set the local state.\nuseEffect(function(){var unregisterAuthObserver=firebase.auth().onAuthStateChanged(function(user){setIsSignedIn(!!user);});return function(){return unregisterAuthObserver();};// Make sure we un-register Firebase observers when the component unmounts.\n},[]);if(!isSignedIn){return/*#__PURE__*/_jsxs(\"div\",{className:\"half-background\",children:[\"\\xA0\",/*#__PURE__*/_jsxs(\"div\",{className:\"authContainer\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Sign In or Register\"}),/*#__PURE__*/_jsx(StyledFirebaseAuth,{uiConfig:uiConfig,firebaseAuth:firebase.auth()})]})]});}else{return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"half-background\",children:[\"\\xA0\",/*#__PURE__*/_jsxs(\"div\",{className:\"authContainer\",children:[/*#__PURE__*/_jsx(\"img\",{className:\"avatar\",src:firebase.auth().currentUser.photoURL,alt:\"\"}),/*#__PURE__*/_jsx(\"h1\",{children:\"This is your Dashboard\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"Welcome \",firebase.auth().currentUser.displayName,\"! You are now signed-in!\"]}),/*#__PURE__*/_jsx(\"a\",{className:\"btn\",onClick:function onClick(){return firebase.auth().signOut();},children:\"Sign-out\"})]})]})});}}export default SignInScreen;","map":{"version":3,"sources":["/home/prajjwal/Documents/GitHub/todo-app/src/components/Login.js"],"names":["React","useEffect","useState","StyledFirebaseAuth","firebase","uiConfig","signInFlow","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","EmailAuthProvider","callbacks","signInSuccessWithAuthResult","SignInScreen","isSignedIn","setIsSignedIn","unregisterAuthObserver","onAuthStateChanged","user","currentUser","photoURL","displayName","signOut"],"mappings":"+JAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,kBAAP,KAA+B,qCAA/B,CACA,MAAOC,CAAAA,QAAP,KAAqB,UAArB,CAEA;6IACA,GAAMC,CAAAA,QAAQ,CAAG,CACf;AACAC,UAAU,CAAE,OAFG,CAGfC,aAAa,CAAE,CACbH,QAAQ,CAACI,IAAT,CAAcC,kBAAd,CAAiCC,WADpB,CAEbN,QAAQ,CAACI,IAAT,CAAcG,iBAAd,CAAgCD,WAFnB,CAHA,CAOfE,SAAS,CAAE,CACT;AACAC,2BAA2B,CAAE,6CAAM,MAAN,EAFpB,CAPI,CAAjB,CAaA,QAASC,CAAAA,YAAT,EAAwB,CACtB,cAAoCZ,QAAQ,CAAC,KAAD,CAA5C,wCAAOa,UAAP,eAAmBC,aAAnB,eAAqD;AAErD;AACAf,SAAS,CAAC,UAAM,CACd,GAAMgB,CAAAA,sBAAsB,CAAGb,QAAQ,CACpCI,IAD4B,GAE5BU,kBAF4B,CAET,SAACC,IAAD,CAAU,CAC5BH,aAAa,CAAC,CAAC,CAACG,IAAH,CAAb,CACD,CAJ4B,CAA/B,CAKA,MAAO,kBAAMF,CAAAA,sBAAsB,EAA5B,EAAP,CAAuC;AACxC,CAPQ,CAON,EAPM,CAAT,CASA,GAAI,CAACF,UAAL,CAAiB,CACf,mBACE,aAAK,SAAS,CAAC,iBAAf,+BAEE,aAAK,SAAS,CAAC,eAAf,wBACE,2CADF,cAEE,KAAC,kBAAD,EACE,QAAQ,CAAEV,QADZ,CAEE,YAAY,CAAED,QAAQ,CAACI,IAAT,EAFhB,EAFF,GAFF,GADF,CAYD,CAbD,IAaO,CACL,mBACE,sCACE,aAAK,SAAS,CAAC,iBAAf,+BAEE,aAAK,SAAS,CAAC,eAAf,wBACE,YACE,SAAS,CAAC,QADZ,CAEE,GAAG,CAAEJ,QAAQ,CAACI,IAAT,GAAgBY,WAAhB,CAA4BC,QAFnC,CAGE,GAAG,CAAC,EAHN,EADF,cAME,8CANF,cAOE,gCACWjB,QAAQ,CAACI,IAAT,GAAgBY,WAAhB,CAA4BE,WADvC,8BAPF,cAWE,UAAG,SAAS,CAAC,KAAb,CAAmB,OAAO,CAAE,yBAAMlB,CAAAA,QAAQ,CAACI,IAAT,GAAgBe,OAAhB,EAAN,EAA5B,sBAXF,GAFF,GADF,EADF,CAsBD,CACF,CAED,cAAeT,CAAAA,YAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\nimport firebase from \"firebase\";\n\n// Configure FirebaseUI.\nconst uiConfig = {\n  // Popup signin flow rather than redirect flow.\n  signInFlow: \"popup\",\n  signInOptions: [\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n    firebase.auth.EmailAuthProvider.PROVIDER_ID,\n  ],\n  callbacks: {\n    // Avoid redirects after sign-in.\n    signInSuccessWithAuthResult: () => false,\n  },\n};\n\nfunction SignInScreen() {\n  const [isSignedIn, setIsSignedIn] = useState(false); // Local signed-in state.\n\n  // Listen to the Firebase Auth state and set the local state.\n  useEffect(() => {\n    const unregisterAuthObserver = firebase\n      .auth()\n      .onAuthStateChanged((user) => {\n        setIsSignedIn(!!user);\n      });\n    return () => unregisterAuthObserver(); // Make sure we un-register Firebase observers when the component unmounts.\n  }, []);\n\n  if (!isSignedIn) {\n    return (\n      <div className=\"half-background\">\n        &nbsp;\n        <div className=\"authContainer\">\n          <h1>Sign In or Register</h1>\n          <StyledFirebaseAuth\n            uiConfig={uiConfig}\n            firebaseAuth={firebase.auth()}\n          />\n        </div>\n      </div>\n    );\n  } else {\n    return (\n      <>\n        <div className=\"half-background\">\n          &nbsp;\n          <div className=\"authContainer\">\n            <img\n              className=\"avatar\"\n              src={firebase.auth().currentUser.photoURL}\n              alt=\"\"\n            />\n            <h1>This is your Dashboard</h1>\n            <p>\n              Welcome {firebase.auth().currentUser.displayName}! You are now\n              signed-in!\n            </p>\n            <a className=\"btn\" onClick={() => firebase.auth().signOut()}>\n              Sign-out\n            </a>\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default SignInScreen;\n"]},"metadata":{},"sourceType":"module"}